
//import Database.Connect;

import java.awt.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 * @author andi
 */
public final class Input extends javax.swing.JFrame {
//    Connect koneksi= new Connect();

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                Input f = new Input();
                f.setDefaultCloseOperation(f.EXIT_ON_CLOSE);
                f.setMinimumSize(new Dimension(640, 360));
                f.pack();
                f.setLocationRelativeTo(null);
                f.setVisible(true);
            }
        });

    }

    /**
     * Creates new form Input
     */
    public Input() {

        initComponents();
        doubleClickJtable();
        selectData();


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        namaBukuTextField = new javax.swing.JTextField();
        idBukuTextField = new javax.swing.JTextField();
        penerbitTextField = new javax.swing.JTextField();
        simpanButton = new javax.swing.JButton();
        penulisTextField = new javax.swing.JTextField();
        tahunTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        refreshButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        hapusButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        fieldCari = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buttonCari = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

//        setClosable(true);
//        setMaximizable(true);
        setResizable(true);
        setVisible(false);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        simpanButton.setText("Simpan");
        simpanButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Penulis");

        jLabel7.setText("Penerbit");

        jLabel8.setText("Tahun");

        jLabel9.setText("Id Buku");

        jLabel10.setText("Nama Buku");

        refreshButton.setText("Refresh");
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(72, 72, 72)
                                .addComponent(refreshButton)
                                .addContainerGap(119, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(simpanButton)
                                                .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                .addComponent(idBukuTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                                                .addComponent(namaBukuTextField)
                                                                .addComponent(penulisTextField)
                                                                .addComponent(penerbitTextField)
                                                                .addComponent(tahunTextField))))
                                        .addContainerGap(31, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addContainerGap(198, Short.MAX_VALUE)
                                .addComponent(refreshButton)
                                .addGap(19, 19, 19))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(idBukuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel9))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(namaBukuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel10))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(penulisTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(penerbitTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel7))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(tahunTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8))
                                        .addGap(18, 18, 18)
                                        .addComponent(simpanButton)
                                        .addContainerGap(19, Short.MAX_VALUE)))
        );

        tblData.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tblData.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null},
                        {null, null, null, null}
                },
                new String[]{
                        "Title 1", "Title 2", "Title 3", "Title 4"
                }
        ));
        tblData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblData.setEditingColumn(0);
        jScrollPane1.setViewportView(tblData);

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        hapusButton.setText("Hapus");
        hapusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(hapusButton)
                                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(hapusButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fieldCari.setText("Masukan id buku");

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("Cari");

        buttonCari.setText("Tampilkan");
        buttonCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCariActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fieldCari, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonCari)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(fieldCari, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                                                .addComponent(buttonCari)))
                                .addGap(2, 2, 2))
        );

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addContainerGap()
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGap(31, 31, 31)
                                                .addComponent(jButton1)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(334, 334, 334))
                                        .addGroup(layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton1))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(34, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>

    public void doubleClickJtable() {
        tblData.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    showFromDoubleClickJtable();
                }
            }
        });

    }

    public void showFromDoubleClickJtable() {
//        new dialog(null,true).show();


    }


    TableRowSorter rowSorter = new TableRowSorter(null);
    boolean installListener = true;

    public DefaultTableModel tblModel() {
        String kolom[] = {"Id Buku", "Nama Buku", "Penulis", "Penerbit", "Tahun"};
        DefaultTableModel dtm = new DefaultTableModel(null, kolom) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        if (installListener) {
            fieldCari.getDocument().addDocumentListener(new DocumentListener() {

                @Override
                public void insertUpdate(DocumentEvent e) {
                    tblData.setRowSorter(rowSorter);
                    rowSorter.setRowFilter(RowFilter.regexFilter(fieldCari.getText()));
                }

                @Override
                public void removeUpdate(DocumentEvent e) {
                    tblData.setRowSorter(rowSorter);
                    rowSorter.setRowFilter(RowFilter.regexFilter(fieldCari.getText()));

                }

                @Override
                public void changedUpdate(DocumentEvent e) {
                    tblData.setRowSorter(rowSorter);
                    rowSorter.setRowFilter(RowFilter.regexFilter(fieldCari.getText()));
                }


            });
            installListener = false;
        }

        return dtm;
    }


    // pura pura ini databasenya
    // males banget bikin db instance di server dan musti ngetik ngetik fieldnya
    // seluruh query database disesuaikan untuk memproses data di array ini
    // tentu saja, bukan database ini permasalahannya.
    private ArrayList<HashMap<Integer, String>> database = null;

    public void selectData() {

        tblData.setRowSorter(null);
        DefaultTableModel tblModel = tblModel();
        tblModel.setRowCount(0);

        if (database == null) {
            database = new ArrayList<>();
            String[] fields = new String[]{"id", "nama", "penulis", "penerbit", "tahun"};
            for (int i = 2000; i < 2010; i++) {
                HashMap<Integer, String> d = new HashMap<>();
                for (int j = 1; j <= fields.length; j++) {
                    String field = fields[j - 1];
                    String col = (j == 1) ? i + "" : field + ": " + i;
                    d.put(j, col);
                }
                database.add(d);
            }
        }
        tblData.setModel(tblModel);

//        String SQL = "SELECT * FROM buku";
//        ResultSet rs = Connect.executeQuery(SQL);
//        try {
//            while(rs.next()) {
        for (HashMap<Integer, String> rs : database) {

//                String idBuku = rs.getString(1);
//                String namaBuku = rs.getString(2);
//                String Penulis=rs.getString(3);
//                String Penerbit = rs.getString(4);
//                String Tahun = rs.getString(5);

            String idBuku = rs.get(1);
            String namaBuku = rs.get(2);
            String Penulis = rs.get(3);
            String Penerbit = rs.get(4);
            String Tahun = rs.get(5);
            String data[] = {idBuku, namaBuku, Penulis, Penerbit, Tahun};
            tblModel.addRow(data);
        }
//        } catch (SQLException ex) {
//            Logger.getLogger(a.mainFrame.class.getName()).log(Level.SEVERE, null, ex);
//        }


        rowSorter = new TableRowSorter(tblModel);
        rowSorter.allRowsChanged();
        tblData.setRowSorter(rowSorter);
        rowSorter.setRowFilter(RowFilter.regexFilter(fieldCari.getText()));

    }


    public void saveData() {
//        String query= "INSERT INTO buku (id_buku,judul_buku,penulis_buku,penerbit_buku,tahun_buku) "
//                + "VALUES('"+idBukuTextField.getText()+"','"+namaBukuTextField.getText()+"','"+penulisTextField.getText()+"',"
//                + "'"+ penerbitTextField.getText()+"','"+tahunTextField.getText()+"')";
//        int status = Connect.execute(query);
//        if(status==1){
//            //JOptionPane.showMessageDialog(null,"data berhasil ditambahkan");
//            selectData();
//        }
//        else{
//            JOptionPane.showMessageDialog(this, "Data gagal ditambahkan", "Sukses", JOptionPane.WARNING_MESSAGE);
//
//        }

        HashMap<Integer, String> d = new HashMap<>();
        d.put(1, idBukuTextField.getText());
        d.put(2, namaBukuTextField.getText());
        d.put(3, penulisTextField.getText());
        d.put(4, penerbitTextField.getText());
        d.put(5, tahunTextField.getText());
        database.add(d);

        selectData();
        JOptionPane.showMessageDialog(null, "data berhasil ditambahkan");


    }

    private void simpanButtonActionPerformed(java.awt.event.ActionEvent evt) {
        if ("".equals(idBukuTextField.getText()) || "".equals(namaBukuTextField.getText()) ||
                "".equals(penerbitTextField.getText()) || "".equals(penulisTextField.getText())
                || "".equals(tahunTextField.getText())) {
            JOptionPane.showMessageDialog(null, "Field tidak boleh kosong");
        } else {
            saveData();
            idBukuTextField.setText("");
            namaBukuTextField.setText("");
            penerbitTextField.setText("");
            penulisTextField.setText("");
            tahunTextField.setText("");

        }


        //this.jInternalFrame1.show();
    }

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        selectData();
    }

    private void hapusButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int baris = tblData.getSelectedRow();
        if (baris != -1) {
            String idBuku = tblData.getValueAt(baris, 0).toString();
//            String SQL = "DELETE FROM buku WHERE id_buku='"+idBuku+"'";
//            int status = Connect.execute(SQL);
//            if (status==1) {
//                JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
//            } else {
//                JOptionPane.showMessageDialog(this, "Data gagal dihapus", "Gagal", JOptionPane.WARNING_MESSAGE);
//            }


            for (Iterator<HashMap<Integer, String>> it = database.iterator(); it.hasNext(); ) {
                HashMap<Integer, String> d = it.next();
                if (d.get(1).equals(idBuku)) {
                    it.remove();
                    JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    break;
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Pilih Baris Data Terlebih dahulu", "Error", JOptionPane.WARNING_MESSAGE);
        }
        selectData();
    }

    private void buttonCariActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
//        dialog dialog= new dialog(null,true);
//        if(dialog.showDataFromSearch()==true){
//            dialog.show();
//
//        }
//        else{
//            JOptionPane.showMessageDialog(null,"Data tidak ditemukan");
//
//        }
        selectData();
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        for (int i = 3000; i < 4000; i++) {


            String query = "INSERT INTO buku (id_buku,judul_buku,penulis_buku,penerbit_buku,tahun_buku) "
                    + "VALUES('" + i + "','" + i + "','" + i + "',"
                    + "'" + i + "','" + i + "')";


//            int status = Connect.execute(query);
//            if (status == 1) {
//                System.out.println("input"+i);
//            }
        }
    }


    // Variables declaration - do not modify
    private javax.swing.JButton buttonCari;
    public static javax.swing.JTextField fieldCari;
    private javax.swing.JButton hapusButton;
    private javax.swing.JTextField idBukuTextField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namaBukuTextField;
    private javax.swing.JTextField penerbitTextField;
    private javax.swing.JTextField penulisTextField;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton simpanButton;
    private javax.swing.JTextField tahunTextField;
    public static javax.swing.JTable tblData;
    // End of variables declaration
}
